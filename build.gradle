import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

plugins {
    id 'com.gradle.build-scan' version '1.13.1'
    id "org.sonarqube" version "2.6"

    id 'java'
    id 'application'

    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.22'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly    'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompileOnly    'junit:junit:4.12'
    testRuntimeOnly    'org.junit.vintage:junit-vintage-engine:5.1.0'
}

group       = 'pipeline.setup'
version     = '0.0.1-SNAPSHOT'
description = 'Learning how to create a CI pipeline using TravisCI and either SonarCloud.io or Coveralls.io'

mainClassName = 'pipeline.setup.App.class'

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

jacoco {
    toolVersion = '0.8.0'
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.enabled = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE'

            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
            limit {
                counter = 'CLASS'
                value = 'MISSEDCOUNT'
                maximum = 0
            }
        }
    }
}

checkstyle {
    toolVersion = '8.8'
    ignoreFailures = 'true'
}

pmd {
    toolVersion = '6.3.0'
    sourceSets = [sourceSets.main]
    ignoreFailures = 'true'
}

findbugs {
    toolVersion = '3.0.1'
    sourceSets = [sourceSets.main]
    effort = 'max'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding    = 'UTF-8'
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew and gradlew.bat scripts'
    gradleVersion = '4.7'
    distributionType = DistributionType.ALL
}
